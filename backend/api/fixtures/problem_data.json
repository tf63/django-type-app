[
    {
        "model": "api.problem",
        "pk": 1,
        "fields": {
            "language": "python",
            "length": "long",
            "words": [
                "class Car:",
                "def __init__(self, make, model, year, color):",
                "self.make = make",
                "self.model = model",
                "self.year = year",
                "self.color = color",
                "self.speed = 0",
                "",
                "def accelerate(self, increment):",
                "self.speed += increment",
                "",
                "def brake(self, decrement):",
                "self.speed -= decrement",
                "",
                "def display_info(self):",
                "print(f\"Make: {self.make}\")",
                "print(f\"Model: {self.model}\")",
                "print(f\"Year: {self.year}\")",
                "print(f\"Color: {self.color}\")",
                "print(f\"Speed: {self.speed} km/h\")",
                ""
            ],
            "tab_counts": [
                0,
                1,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                2,
                1,
                1,
                2,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                0
            ]
        }
    },
    {
        "model": "api.problem",
        "pk": 2,
        "fields": {
            "language": "go",
            "length": "long",
            "words": [
                "package main",
                "",
                "import \"fmt\"",
                "",
                "// Person \u69cb\u9020\u4f53",
                "type Person struct {",
                "\tName string",
                "\tAge  int",
                "}",
                "",
                "// SayHello \u30e1\u30bd\u30c3\u30c9",
                "func (p Person) SayHello() {",
                "\tfmt.Printf(\"Hello, my name is %s and I'm %d years old.",
                "\", p.Name, p.Age)",
                "}",
                "",
                "// IncreaseAge \u30e1\u30bd\u30c3\u30c9",
                "func (p *Person) IncreaseAge() {",
                "\tp.Age++",
                "}",
                "",
                "func main() {",
                "\t// Person \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210",
                "\tperson := Person{Name: \"Alice\", Age: 25}",
                "",
                "\t// \u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057",
                "\tperson.SayHello()   // \"Hello, my name is Alice and I'm 25 years old.\"",
                "\tperson.IncreaseAge()",
                "\tperson.SayHello()   // \"Hello, my name is Alice and I'm 26 years old.\"",
                "}",
                ""
            ],
            "tab_counts": [
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                1,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1,
                1,
                0,
                1,
                1,
                1,
                1,
                0,
                0
            ]
        }
    },
    {
        "model": "api.problem",
        "pk": 3,
        "fields": {
            "language": "python",
            "length": "short",
            "words": [
                "class Person:",
                "def __init__(self, name, age):",
                "self.name = name",
                "self.age = age",
                "",
                "def introduce(self):",
                "print(f\"My name is {self.name} and I am {self.age} years old.\")",
                ""
            ],
            "tab_counts": [
                0,
                1,
                2,
                2,
                1,
                1,
                2,
                0
            ]
        }
    },
    {
        "model": "api.problem",
        "pk": 4,
        "fields": {
            "language": "python",
            "length": "medium",
            "words": [
                "class BankAccount:",
                "def __init__(self, account_number, account_holder, initial_balance=0):",
                "self.account_number = account_number",
                "self.account_holder = account_holder",
                "self.balance = initial_balance",
                "",
                "def deposit(self, amount):",
                "self.balance += amount",
                "print(f\"{self.account_holder}\u3055\u3093\u306e\u53e3\u5ea7\u306b{amount}\u5186\u5165\u91d1\u3057\u307e\u3057\u305f\u3002\")",
                "",
                "def withdraw(self, amount):",
                "if self.balance >= amount:",
                "self.balance -= amount",
                "print(f\"{self.account_holder}\u3055\u3093\u306e\u53e3\u5ea7\u304b\u3089{amount}\u5186\u5f15\u304d\u51fa\u3057\u307e\u3057\u305f\u3002\")",
                "else:",
                "print(\"\u6b8b\u9ad8\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\")",
                "",
                "def check_balance(self):",
                "print(f\"{self.account_holder}\u3055\u3093\u306e\u53e3\u5ea7\u6b8b\u9ad8\u306f{self.balance}\u5186\u3067\u3059\u3002\")",
                "",
                ""
            ],
            "tab_counts": [
                0,
                1,
                2,
                2,
                2,
                1,
                1,
                2,
                2,
                1,
                1,
                2,
                3,
                3,
                2,
                3,
                1,
                1,
                2,
                0,
                0
            ]
        }
    }
]